---
layout: handbook-page-toc
title: "CI/CD UX Team"
description: "The CI/CD UX team works to ensure the best experience for users of all knowledge levels to successfully apply continuous methods with no 3rd-party application or integration"
---

## On this page

{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

| **Meet our team** | [Team page](/company/team/?department=ci-cd-ux-team) |
| **GitLab.com** | [`@gitlab-com/gitlab-ux/cicd-ux`](https://gitlab.com/gitlab-org/ci-cd-ux) |
| **Slack channel** | [`#ux_ci-cd`](https://gitlab.slack.com/app_redirect?channel=ux_ci-cd) (_internal only_)|
| **Youtube playlists** | [CI/CD UX - Team Meetings](https://www.youtube.com/watch?v=ViEs54I5lHE&list=PL05JrBw4t0Kpap0GkV0SSuGnPhCM8jrAv) |
| |  [CI/CD UX Team - Design Reviews](https://www.youtube.com/watch?v=AYO97sRry4E&list=PL05JrBw4t0Kpnb8RDztlfpryAYip1OMwb) | 
| **Ops Section page** | [Ops handbook](/handbook/product/categories/#ops-section) | 

## Hello!

Welcome to the GitLab CI/CD UX team handbok page. We're comprised of three stage groups that support designing and building the GitLab DevOps product: [Verify](/direction/ops/#verify), [Package](/direction/ops/#package), and [Release](/direction/ops/#release).

We design create simple, clean ways to make GitLab the tool of choice for deploying where, when, and how users want. We work to ensure the best experience for users of all knowledge levels, allowing them to successfully apply the continuous methods (Continuous Integration, Delivery, and Deployment) to their software with no third-party application or integration needed.

Learn more about how each of the CI/CD UX stages work:

* [Verify UX](/handbook/product/ux/stage-group-ux-strategy/verify/)
* [Release UX](/handbook/product/ux/stage-group-ux-strategy/release/)
* [Package UX](/handbook/product/ux/stage-group-ux-strategy/package/)
* [Runner UX](/handbook/product/ux/stage-group-ux-strategy/ci-cd/runner/)

### Our strategy

Our team significantly contributes to the [UX Department direction for FY23](/handbook/product/ux/#fy23-direction) and [Ops Product Section Direction](/direction/ops/) in the following ways:

1. System Usability
  * [Improve the usability of CI/CD](https://gitlab.com/groups/gitlab-org/-/epics/6929)
1. User Experience
  * [Document the user-validated Jobs to be Done](https://gitlab.com/groups/gitlab-org/-/epics/6931) for every actively maturing product category.
  * Ensure that we have confidence that a proposed solution will meet the user's needs and expectations by [proactively performing solution validation](https://gitlab.com/groups/gitlab-org/-/epics/6178).
  * Evaluate the user experience of various tasks and flows through UX Scorecards to make sure we are tracking progress and improvements over time.
        * [UX Scorecards - Verify:Pipeline Authoring](https://gitlab.com/groups/gitlab-org/-/epics/6891)
        * [UX Scorecards - Verify:Pipeline Execution](https://gitlab.com/groups/gitlab-org/-/epics/6890)
        * [UX Scorecards - Verify:Runner](https://gitlab.com/groups/gitlab-org/-/epics/6889)
        * [UX Scorecards - Verify:Pipeline Insights](https://gitlab.com/groups/gitlab-org/-/epics/6893)
        * [UX Scorecards - Package](https://gitlab.com/groups/gitlab-org/-/epics/6892)
        * [UX Scorecards - Release](https://gitlab.com/groups/gitlab-org/-/epics/6776)
1. Analytical leadership
  * Engage with Product Managers and Group Product Managers on direction items.

### OKRs

* Current quarter: [FY23-Q2](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1978)
* Previous quarters
    * [FY23-Q1](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1841)
    * [FY22-Q4](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1756), [FY22-Q3](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1660), [FY22-Q2](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1603), [FY22-Q1](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1501)
    * [FY21-Q1](https://gitlab.com/gitlab-org/gitlab-design/-/issues/925), [FY21-Q2](https://gitlab.com/gitlab-org/gitlab-design/-/issues/1179), [FY21-Q3](https://gitlab.com/gitlab-org/ci-cd-ux/-/issues/13), [FY21-Q4](https://gitlab.com/gitlab-org/ci-cd-ux/-/issues/22) 

### Performance indicators

#### UX Debt in CI/CD

<embed width="100%" height="350" src="<%= signed_periscope_url(dashboard: 930769, embed: 'v2') %>">

## How we work

### Onboarding

Coming soon.

### Workflow

We follow the workflows outlined in the [UX section](/handbook/product/ux/how-we-work/) of the handbook. In addition, we do the following:

* Track [team-specif OKRs](#okrs) to execute our UX Department strategy.
* Use our own [UX Definition of Done (DoD)](#ux-definition-of-done-dod).
* Participate in the [monthly milestone kick off](/handbook/product/ux/ux-department-workflow/#milestone-kickoff). Together with Product Managers, we record a video with a focus on the user experience, front-end (user interface design) and research innitiatives.
    * [View all Milestone Kickoff playlists](/direction/kickoff/#ops-section)
* Perform synchronous and asyncrhonous [design reviews](/handbook/product/ux/ux-resources/#synchronous-design-reviews).
    * [Watch our syncrhonous design reviews on Youtube](https://www.youtube.com/watch?v=AYO97sRry4E&list=PL05JrBw4t0Kpnb8RDztlfpryAYip1OMwb)

### Team meetings

Our team meets every two weeks to discuss our work, processes, talk about user research activities, share knowledge, and raise questions to each other. We are also using session for team retrospectives, as well as sharing useful resources around design and DevOps domains. You can watch the [CI/CD UX Team Meeting videos](https://www.youtube.com/playlist?list=PL05JrBw4t0KqkrzZyJrJSEWNyiL_5x7an) on Unfiltered.

### This week I learned


We use the geekbot Slack plugin to automate our async weekly retrospective called [This Week I Learned](https://app.geekbot.com/dashboard/standup/113094/view). Participation is optional but encouraged. Every Friday at 9am on each team memeber's local time zone, geekbot asks "What did you learn this week?", "What's something you're looking forward to in the next week?", "Is there something puzzling you? If so, who can support you?". Answers are posted in the #ux_ci-cd Slack channel.

## Resources

### Career Development resources

* [Career Development](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/handbook/people-group/learning-and-development/career-development)
* [Learning & Development](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/handbook/people-group/learning-and-development)
* [Learning Initiatives](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/handbook/people-group/learning-and-development/learning-initiatives)

### UX Definition of Done (UX DoD)

The UX DoD lists the activities a Product Designer is responsible for in the [Product Development Flow](/handbook/product-development-flow/). This list can be applied to an epic/issue, and serves as a tool for describing and tracking the expected UX deliverables, objectives, and the approval process.

To keep the process efficient, depending on the scope of a problem, a Product Designer might not need to check off all of the items in the UX DoD while working through the Product Development Flow.

You can add the following checklist to an issue description to help illustrate the "completeness" of a design proposal:

```

### UX Definition of Done

1️⃣ **VALIDATION TRACK**

**Problem Validation Phase**
- [ ] Problem is well understood and has been validated
- [ ] JTBD is well understood and has been validated
- [ ] PM has communicated the opportunity canvas to stable counterparts and group stakeholders, including the Product Designer and Product Design Manager

**Design Phase**
- [ ] Document the JTBD and UX goal in the issue/epic description
- [ ] Explore multiple different approaches as a team
- [ ] Discuss the technical implications with Engineering
  - [ ] Identify any potential cross-team dependencies and include the DRIs in the discussions
- [ ] Identify a small set of options to validate
    - [ ] Document the user story(ies) for the MVC
    - [ ] Consider edge cases for each user story
    - [ ] Create prototypes or mockups for each user story
- [ ] [Pajamas component lifecyle](https://design.gitlab.com/get-started/lifecycle)
    - [ ] Identify component design or pattern update/creation
    - [ ] Discuss the technical implications with Engineering
    - [ ] Pajamas issue is created (within the scope of the MVC)
- [ ] Update issues/epic descriptions
    - [ ] The appropriate [labels](https://about.gitlab.com/handbook/product/ux/ux-department-workflow/#how-we-use-labels) were applied
      - [ ] If changes involve copy, add the ~"Technical Writing" and ~"UI text" labels
- [ ] Proposed solution(s) identified and documented in the issue/epic description

**Solution Validation Phase**
- [ ] Validate the solution to increase confidence in the proposed solution
- [ ] Document the solution validation learnings
- [ ] Product Designer has communicated the solution validation learnings to stable counterparts and group stakeholders, including the Product Design Manager
- [ ] Update the MVC proposal with relevant insights from the solution validation
  - [ ] Discuss the technical implications with Engineering
  - [ ] Update issue/epic description to contain or link to the findings

2️⃣ **BUILD TRACK**

[**Plan Phase**](https://about.gitlab.com/handbook/product-development-flow/#build-phase-1-plan)
- [ ] Proposal is ready to be broken down and prioritized by PM for development

**Develop & Test Phase**
- [ ] Product Designer reviewed MRs that include user-facing changes, as per the [Code Review Guidelines](https://docs.gitlab.com/ee/development/code_review.html)
  - [ ] UX Debt issues have been identified and assigned to a milestone

```

## Strategic counterparts

* [Product Marketing Managers](/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/core-product-marketing/)
* [Analyst Relations](/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/analyst-relations/)
* [Customer Success](/handbook/customer-success/)
* [Verify stage counterparts](/handbook/product/categories/#verify-stage)
* [Package stage counterparts](/handbook/product/categories/#package-stage)
* [Release stage counterparts](/handbook/product/categories/#release-stage)
