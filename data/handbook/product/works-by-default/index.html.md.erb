---
layout: handbook-page-toc
title: Works by default
---

## Works by default

Working by default is an important [Product Principle](/handbook/product/product-principles/#configuration-principles), but we haven't always been successful in making sure features are both **enabled by default** and **setup by default**. This page is meant to help us measure and track out progress improving the product so that more features do work by default.

### Legend

- ✅ Works by default (**enabled** by default, and **setup** by default)
- ⚙️ Setup required (feature must be setup by a user)
  - In application setup is required by a user before the feature can be used. Example: URL or API keys needed for integration with an external tool like Jira.
- 🔌 Installation required (feature must be enabled by an administrator on self-managed instances)
  - Installation of extra components on a host machine, or feature flags are off by default. Example: Changes to `gitlab.rb` are required to enable the feature.
- 📦 Setup and Installation required (feature must be enabled by an administrator, and setup by a user)
  - Both in application setup is required, and installation is required. Example: Gitaly Cluster requires Omnibus to be installed on additional machines, and in application storage settings to be modified.
- ❌ Not supported
- N/A Not applicable 

It helps to consider these states using the following 2x2 table:

|                  | On-by-default            | Installation required               |
|------------------|--------------------------|-------------------------------------|
| Setup-by-default | ✅ Works by default      | 🔌 Installation Required            |
| Setup required   | ⚙️ Setup required         | 📦 Setup and Installation Required  |

<% data.sections.each do |sectionKey, section| %>
  <% data.stages.stages.select{|stageKey,stage| stage.section==sectionKey}.each do |stageKey, stage| %>

### <%= stage.display_name %>

    <% stage.groups.each do |groupKey, group| %>

<%= "<a class=\"scroll-anchor\" id=\"#{group.name}\"></a>" %>
#### <%= group.name %>

<%= works_by_default_table(group: groupKey) %>

    <% end %>
  <% end %>
<% end %>

## How it works

This page is generated from [`data/features.yml`](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/features.yml).

Any feature containing a valid `works_by_default` hash will be included in the table above.

```yaml
# Example
  - title: "Fancy feature"
    description: |
      Just incredible. Miraculous some have said.
    works_by_default:
      gitlab_com: true
      omnibus: setup_required
      chart: install_required
      source: install_required
      gdk: false
      note: X, Y, and Z will make it work by default everywhere.
```

The `works_by_default` field supports the following attributes:

- `gitlab_com`, `omnibus`, `chart`, `source`, `gdk`, `all`
  - `all` is for convenience if they are all the same.
  - `all` can be set combination with other fields. The more specific field takes priority.
- `note` is a string with any comments or explanation

Supported statuses for these fields are:

- `true` - ✅ Works by default (**enabled** by default, and **setup** by default)
- `setup_required` - ⚙️ Setup required (feature must be setup by a user)
- `install_required` - 🔌 Installation required (feature must be enabled by an administrator)
- `setup_and_install_required` - 📦 Setup and Installation required (feature must be enabled by an administrator, and setup by a user)
- `false` - ❌ Not supported
- `not_applicable` - N/A

The [`features.schema.json`](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/schemas/features.schema.json) schema provides basic validation and can be used with the [YAML Language Server](https://github.com/redhat-developer/yaml-language-server).
