---
layout: handbook-page-toc
title: "Code Contributor Program Operations"
description: "From the beginning, GitLab has been an open source project and we want to continue growing community code contribution."
---

# On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

This page includes all the necessary information the program maanger needs to run operations of the Code Contributor Program.
If you are a code contributor, please refer to the [community version](/handbook/marketing/community-relations/code-contributor-program) of the Code Contributor Program handbook page. 

### Communication/collaboration with contributors

#### Contributor channel

A GitLab contributor room is available on [Gitter](https://gitter.im/gitlabhq/contributors) for people interested in contributing to GitLab. This is open to everyone to join and is a good place for community members to network and help each other.

There is also a [Sameroom](https://sameroom.io/) tunnel between the Gitter contributor room and the [#gitter-contributors-room](https://gitlab.slack.com/messages/gitter-contributors-room/) Slack channel, so that GitLab team members can follow Gitter conversations and post to Gitter without leaving Slack.

You can use either channel to reply, as they are bidirectional. However, bear in mind of the limitations when replying from Slack

- No thread support
- No DMs
- No mentions
- See the [full list of bridge limitations](https://sameroom.io/limitations#slack)

### Organizing and promoting events for/to the community
#### Event planning
- Draft an agenda before the meeting, including (make sure the document is open to anyone with the link)
  - Roll call, introductions
  - Various topics
  - Open floor for the community to bring topics
- Include instructions on how to join
  - Link to zoom (or any other video platform)
- Add the event to the [Developer Evangelism calendar](/handbook/marketing/community-relations/developer-evangelism/#-team-calendar). If you are not a GitLab Team Member, ask the [Code Contributor Program Manager](/handbook/marketing/community-relations/code-contributor-program/#contact) or one of the [Developer Evangelism Team Members](/handbook/marketing/community-relations/developer-evangelism/#-team-members-and-focus-areas) to add the event to the calendar.
- Bring the event to the attention of the [Code Contributor Program Manager](/handbook/marketing/community-relations/code-contributor-program/#contact).
- Follow the instructions below for social support or open a request at the [Code Contributor's planning repo](https://gitlab.com/gitlab-com/marketing/community-relations/contributor-program/general/issues/new?issuable_template=event-support-request).
#### Social
- Draft a short action-oriented copy like: "Join the upcoming GitLab hackathon (link) on the N."
- Share the message on the following channels at least 2 weeks before, 1 week, and a day before the event:
  - Twitter: use your account but mention `@gitlab` (note: never share a Zoom link on Twitter)
  - [Gitter Contributors channel](https://gitter.im/gitlab/contributors)
  - [Gitter GitLab channel](https://gitter.im/gitlab/gitlab)
  - [GitLab Community Discord](https://discord.gg/gitlab)
#### Event platforms
- Ask [John Coghlan](https://gitlab.com/johncoghlan) for adding the event on [meetup.com](https://www.meetup.com/gitlab-virtual-meetups/). 
- Add the event on [GitLab Events page](https://about.gitlab.com/events/).


#### Hackathons

There will be a quarterly [Hackathon](/community/hackathon/) for GitLab community members to come together to work on merge requests, participate in tutorial sessions, and support each other on the [GitLab contributors channel](https://gitter.im/gitlabhq/contributors).  Agenda, logistics, materials, recordings, and other information for Hackathons will be available on the [Hackathon project pages](https://gitlab.com/gitlab-com/marketing/community-relations/contributor-program/gitlab-hackathon).

The event planning will be done following the [Hackathon issue template](https://gitlab.com/gitlab-com/marketing/community-relations/contributor-program/hackathon/issues/new?issuable_template=hackathon%20event%20plan) in the [GitLab Hackathon project](https://gitlab.com/gitlab-com/marketing/community-relations/contributor-program/hackathon/-/issues/).

#### Virtual hackathons/hackathon-in-a-box

We also encourage wider community members to organize events to encourage and support new contributors to GitLab. This could be done as a part of in-person or virtual [GitLab meetups](/handbook/marketing/community-relations/evangelist-program/#meetups).

If wider community members are interested in including a hackathon as a part of a meetup, ask them to include this information when they open a [meetup issue](https://gitlab.com/gitlab-com/marketing/community-relations/evangelist-program/general/issues/new?issuable_template=meetup-organizer). The code contributor program manager will get in touch with the organizer and provide the necessary resources to support the event.

Some of the available resources can be found in the [hackathon-in-a-box folder](https://drive.google.com/drive/u/0/folders/1YWb16NAguXq9T5kORhNcXOk3JwdaS4NF), [GDK tutorials playlist](https://www.youtube.com/playlist?list=PL05JrBw4t0KofEeWa9EXUOS8kJHOjIH_W), etc. The program manager should also work with the organizer to create a list of issues that are good for first-time/inexperienced contributors and share the list with participants prior to the event. There should also be coordination with the organizer on GitLab merchandise that can be distributed to anyone who creates a Merge Request during the event.

#### Community office hours

To facilitate communication between the wider community and GitLab team members, product teams may host community office hours. The purpose of these office hours is to gather wider community feedback on product/development, discuss wider community contributions, review MR backlog, and other topics. Office hour related issues or MRs will have the label `Office Hours` as you can see in [these examples](https://gitlab.com/groups/gitlab-org/-/issues?scope=all&utf8=%E2%9C%93&state=all&label_name[]=Office%20Hours).

Calls will be open to everyone and recordings will be posted after the call. See examples of past office hours from [this playlist](https://www.youtube.com/playlist?list=PL05JrBw4t0KrXZEInAfyddFlalvwaxL-I). To make it easier for the community to find the videos, each stage should create their own office hours playlist and link to it from their handbook page.

All the community office hour calls should be added to the [Developer Evangelism calendar](https://about.gitlab.com/handbook/marketing/community-relations/developer-evangelism/#-team-calendar) and [meetup.com group](https://www.meetup.com/gitlab-virtual-meetups/).


#### How to organize a community office hour call

**Preparation**
- Once you have a finalized date and time, add it to:
  - the [meetup.com group](https://www.meetup.com/gitlab-virtual-meetups/) (meetup.com account available at your GitLab's 1Password vault)
  - the [developer evangelism calendar](https://about.gitlab.com/handbook/marketing/community-relations/developer-evangelism/#-team-calendar)
- Update [the office hour running notes doc](https://docs.google.com/document/d/18ddf5d5xASImrYnAG9P8VJXe0I63SBXy7ufDBBNB5H4/edit#) with the Zoom URL and call details 
- Announce it [on Discord](https://discord.gg/gitlab)
- Tweet about it, [tagging GitLab](https://twitter.com/gitlab)
- The day before the call, post reminders on Discord

**Running the call**
- Ask for everyone's permission to live stream the call. Then press the Live Stream on YouTube button in Zoom to begin streaming.
- Enable close captioning in zoom for accessibility.
- Once the call starts, do a round of introductions asking the question: "what brought you to this call". This will help you adjust the call to the community's needs and, answer any questions/meet their expectations.
- Keep detailed meeting minutes

**After the call**
- Add the youtube video to the "office hour calls" playlist
- Post a recap and the video recording on Discord  


#### Community challenge

To encourage contribution to priority issues on an on-going basis (and not just during Hackathons), we will maintain a list of up to 5 priority issues for each [product stage](/handbook/product/categories/) and prizes will be given to wider community members who have MRs merged for these issues. These issues will have the label [`Community challenge`](https://gitlab.com/groups/gitlab-org/-/issues?label_name%5B%5D=Community+challenge) and more details such as prizes, assignment of these issues, etc.

### Community Newsletter
We run a [Community Newsletter](https://about.gitlab.com/community/newsletter/) to share developer-focused content, alert community members about upcoming events, and keep contributors engaged. The focus of the newsletter is on driving contributions and engagement. It will not be used to generate or nurture leads and allow us to connect with and share our community's contributions. 
Submissions to the newsletter are always welcome. To share a contribution or a project you're working on with GitLab, find an active Newsletter Issue with the label [`Community Newsletter::Draft`](https://gitlab.com/groups/gitlab-com/-/issues/?label_name%5B%5D=Community%20Newsletter%3A%3A%20Draft) and add your content to the description. 

#### Newsletter Process: 
1. The Community Newsletter DRIs (@sugaroverflow) create an issue for the draft, add a deadline, and tag team members to add section content. 
1. Once ready, they add the `Community Newsletter::Ready` label and move content to Mailjet.
1. After the Newsletter has been sent, add the `Community Newsletter::Feedback` and add a week to the due date to collect any feedback on the issue. 


#### Issues for new contributors

To highlight issues that would be good for new contributors, you can add a [label `good for new contributors`](https://gitlab.com/groups/gitlab-org/-/labels?utf8=%E2%9C%93&subscribed=&search=good+for+new+contributors). It is strongly recommended that these issues  have mentor(s) listed so that the new contributor knows who they can get help from while they work on the issue.

## Supporting the contributor community

#### Triaging wider community MRs

Triage process for the new merge requests from the wider community opened on [GitLab.com](https://gitlab.com/groups/gitlab-org) projects is outlined on [Community Merge Request Triage Policies](/handbook/engineering/quality/merge-request-triage/) page.

Every hour the [GitLab Bot](https://gitlab.com/gitlab-bot) automatically adds [contribution labels](#contribution-labels) to merge requests submitted by wider community members.

If you subscribe to any of those labels, you will also receive an email notification from the `GitLab Bot`. It's helpful to review these MRs to do some quick triaging to manually apply appropriate labels (e.g. corresponding devops/group stages) and mention GitLab team-members (e.g. product managers, engineering managers, technical writers for documentation, etc. ) so that the community MRs can be reviewed in a timely manner. You can refer to the [product team handbook](/handbook/product/categories/#dev-department) for the list of people you can mention in  merge requests for each product area.

##### Contribution labels

- `~"Community contribution"`: the main label to monitor for the Contributor Program. Also one of the [type labels](/handbook/engineering/metrics/#data-classification). Automatically applied by the [GitLab Bot](https://gitlab.com/gitlab-bot) to MRs submitted by wider community members. It is added to [GitLab projects](https://gitlab.com/groups/gitlab-org/-/merge_requests?label_name[]=Community+contribution) and to the [GitLab website (including the handbook)](https://gitlab.com/groups/gitlab-com/-/merge_requests?label_name[]=Community+contribution). If you work with contributors, it is recommended that you subscribe to this label to receive e-mail notifications and thus be able to respond to those MRs in a timely manner. Remember to thank individuals for their contributions. [Learn more about the cadence and conditions for this automation](/handbook/engineering/quality/triage-operations/#community-contributions).
- `1st contribution`: this label is used to identify, thank and reward first-time contributors. It is automatically applied to the first MR each wider community member submits to a particular project. It is added to [GitLab projects](https://gitlab.com/groups/gitlab-org/-/merge_requests?label_name%5B%5D=1st+contribution) and to the [GitLab website (including the handbook)](https://gitlab.com/groups/gitlab-com/-/merge_requests?label_name%5B%5D=1st+contribution). [First-time contributors](#first-time-contributors) are also awarded a gift as our way to say thanks and as a recognition for their work.

#### Merge Request Coaches
[Merge Request Coaches](/job-families/expert/merge-request-coach/) are available to help contributors with their MRs. This includes identifying reviewers for the MR, answering questions from contributors, educating contributors on the [contribution acceptance criteria](https://docs.gitlab.com/ee/development/contributing/merge_request_workflow.html#contribution-acceptance-criteria), or even completing the MR if the contributor is unresponsive or unable to complete it by adding the `coach will finish` label and creating a follow-up MR. Contributors can mention the coaches in their MRs by typing `@gitlab-org/coaches`.

Merge Request Coaches can be found using the [list of current Merge Request Coaches](/handbook/marketing/community-relations/code-contributor-program/resources/merge-request-coach-lifecycle.html#current-merge-request-coaches), or on the [team page](/company/team/) by selecting `Merge Request Coach` in the department filter.
There is also the `#mr-coaching` channel in GitLab Slack if GitLab team members have any questions related to community contributions.

More information on Merge Request Coaches (including how to become a Merge Request Coach) can be found in the [MR coach lifecycle page](/handbook/marketing/community-relations/code-contributor-program/resources/merge-request-coach-lifecycle.html).

#### DCO and CLA Guidance
All external contributions to GitLab are subject to the [GitLab DCO or CLA](/community/contribute/dco-cla/), depending on where the contribution is made and on whose behalf.

Instructions for corporate contributors to enter into an overarching Corporate CLA covering all contributions made on their behalf are set out on the [DCO-CLA page](/community/contribute/dco-cla/#need-a-corporate-cla-covering-all-contributors-on-behalf-of-your-organization). The following team members are members of the `cla_managers@gitlab.com` Google Group referred to on that page: Greg Myers, Dan Rhodes.


#### First-time contributors
The first-time contributors can be identified after each release in the [First time contributors MRs dashboard](https://gitlab.biterg.io/app/kibana#/dashboard/df97f810-f397-11e8-8fe1-b354a33b38be).

Every time a contributor is opening a merge request to a GitLab namespace for the first time, the label "~1st contribution" is automatically applied to the merge request.

Once the merge request is reviewed and merged, the contributor can apply for the `#myfirstMRmerged` gift via a self-nomination form on the [nominations for GitLab swag page](/handbook/marketing/community-relations/code-contributor-program/community-appreciation/#nomination-process).

The Code Contributor Program manager can use the [outreach email/message template](/handbook/marketing/community-relations/code-contributor-program/templates/email-templates.html) when sending the link for the first-time contributor gift.


#### Working with the Core Team
More information on the [Core Team](/community/core-team/) is available in the [Core Team handbook page](/handbook/marketing/community-relations/code-contributor-program/core-team/).

#### Contributing to the GitLab Enterprise Edition (EE)

For community contributors to contribute to the [GitLab Enterprise Edition](https://gitlab.com/gitlab-org/gitlab-ee), they will need a license for EE. If they don't already have a license, they can get a [free trial for 30 days](/free-trial/). If they cannot complete their work in 30 days, a new EE license for 3 months for a limited number of users can be issued. If they want to continue contributing to EE beyond the 3 months (and there have been contributions during the 3-month period), we can renew the license for another 3 months by opening an [issue using the Wider Community Contributor License Request](https://gitlab.com/gitlab-com/support/internal-requests/-/issues/new?issuable_template=Wider%20Community%20Contributor%20License%20Request).


#### For contributors who don't own a credit card 

For contributors who don't own a credit card and need to be manually verified, a GitLab team member can open an [internal request](https://gitlab-com.gitlab.io/support/internal-requests-form/) using the `Other -> Other (nothing else fits the request)` template. GitLab Support will follow the [Manual credit card validation process described in the handbook](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/saas/ci_minutes.html#manual-credit-card-validation-for-community-contributors) to complete the request.


#### For contributors who run out of CI minutes

Wider community members may run out monthly CI minutes as they are working on an MR. Community members can send a request to reset their CI minutes to `contributors@gitlab.com` in order to continue their work. After reviewing the request, a Community Relations team member will file an issue with the [GitLab.com Support Team](https://gitlab-com.gitlab.io/support/internal-requests-form/) using the `Other -> Other (nothing else fits the request)`  template. Information on the community member name, username, and link to the MR that requires additional CI minutes will need to be provided in the issue.

You can also consider joining the [GitLab Community group](https://gitlab.com/gitlab-community/meta#about).

#### For contributors who max out on other CI/CD resources

Wider community members under the Free tier on GitLab.com may run into [GitLab CI/CD limits](https://docs.gitlab.com/ee/user/gitlab_com/index.html#gitlab-cicd) for max jobs or max pipeline schedules. Community members can send a request to get a temporary Bronze license in order to continue their contributions to `contributors@gitlab.com`. After reviewing the request, a Community Relations team member will file a support issue for [`Plan Change Request`](https://gitlab.com/gitlab-com/support/internal-requests/issues/new?issuable_template=Plan%20Change%20Request). In the issue, information on GitLab username/name space (if it's a group), contact email, end date, link to MR(s) that require additional CI/CD resources, etc. should be included.

#### Contributor License Agreement (CLA) for contributions to GitLab Enterprise Edition (EE)
Contribution to the [GitLab Enterprise Edition](https://gitlab.com/gitlab-org/gitlab-ee) requires accepting a [Contributor License Agreement(CLA)](https://gitlab.com/gitlab-org/gitlab-ee/blob/master/CONTRIBUTING.md#contributor-license-agreement). In order to make the process as developer-friendly as possible, we do not require any paperwork and consider the act of submitting code via Merge Request as an agreement to [individual](https://gitlab.com/gitlab-org/gitlab-ee/blob/1bfac68311180a201001f1cd0b66833910dd9684/doc/legal/individual_contributor_license_agreement.md) or [corporate](https://gitlab.com/gitlab-org/gitlab-ee/blob/1bfac68311180a201001f1cd0b66833910dd9684/doc/legal/corporate_contributor_license_agreement.md) CLAs.

The CLA only applies to GitLab EE, while other GitLab projects will continue to be licensed under MIT and simply require signing off on the [Developer Certificate of Origin (DCO)](#developer-certificate-of-origin-dco).

#### Developer Certificate of Origin (DCO)

Code contribution to GitLab projects with the exception of GitLab Enterprise Edition (EE) requires signing off on the [Developer Certificate of Origin (DCO)](https://gitlab.com/gitlab-org/dco/blob/master/README.md).

In line with our value that [everyone can contribute](/company/mission/#mission) to GitLab, we strive to make our process as developer-friendly and frictionless as possible. As such, we consider the act of contributing to the code by submitting a Merge Request as the "Sign off" or agreement to the certifications and terms of the DCO and MIT license. No further action is required.

Check out this [issue](https://gitlab.com/gitlab-org/gitlab-ce/issues/43293) for more details.

### Community outreach

#### Contacting contributors

To be respectful to the contributor's privacy, we will only contact data that is publicly available to reach out to them.

Here are some ways to reach out to contributors to e.g. distribute Hackathon prizes or MVP swag:

- You can mention them in an issue using their GitLab user name.
- In private through our communication platform (Gitter, Slack, etc.).
- A user might have e-mail or Twitter info on their GitLab profile. Sometimes users have the same username in other platforms (e.g. GitHub), and might have more information on their profiles there.
- Their e-mail address is stored in their git commits, unless they choose to use a [private commit e-mail](https://docs.gitlab.com/ee/user/profile/index.html#private-commit-email).

Once you've found out the best way to contact them, you can choose to use a mention, e-mail or Twitter for instance.

#### Contributor blog post series

Goal is to publish a regular blog post featuring contributors from the community.  The format will be a [casual Q&A with a community member](/blog/2018/08/08/contributor-post-vitaliy/) and will be posted on the [GitLab blog page](/blog/).

When developing a blog post, follow the [blog guidelines](/handbook/marketing/blog/).

#### Following up on inactive merge requests

A weekly issue [(an example)](https://gitlab.com/gitlab-org/gitlab/-/issues/243432) highlighting [wider community MRs that require attention](https://about.gitlab.com/handbook/engineering/quality/triage-operations/#community-merge-requests-requiring-attention) will be sent to MR coaches. Follow-ups should be made on inactive MRs with either wider community members or reviewers to ask if there's a plan to continue the work or if MR should be closed.

### Recognition for contributors

#### Appreciation for highlighted contributions

From time to time, a wider community member will submit a particularly outstanding contribution. Other than thanking them on the MR, we might want to additionally show our appreciation by sending them some GitLab merchandise. Anyone in the GitLab team or in the wider community can follow the process to [nominate a contributor](/handbook/marketing/community-relations/code-contributor-program/community-appreciation/).

#### Most Valuable Person (MVP)

Every release, a contributor is selected as a Most Valuable Person (MVP) for significant contribution(s) for that release. Suggestions/discussions for the MVP take place in the [#release-post Slack channel](https://gitlab.slack.com/messages/release-post). GitLab team-members and [Core Team members](/community/core-team/) are all encouraged to participate in the MVP discussion.  Based on the discussion in the Slack channel, the release post author for each release will make a decision on the MVP.

Some common criteria to weigh who to nominate and who should be selected:

- The impact of a contribution  (could be small, or simple change but big impact for users)
- The complexity/difficulty of the contribution
- Consistency: A contributor who continually contributes could be nominated for MVP for any given release.

See the [Release Posts section](/handbook/marketing/blog/release-posts/#mvp) for more details on how to add an MVP to the release post.

After each release, MVPs are added to the [GitLab Hall of Fame](/community/mvp/).

##### Sending MVP Appreciation Gifts

Every release GitLab chooses a [Most Valuable Person (MVP)](https://about.gitlab.com/community/mvp/) and recognizes them for their contributions. The Advocates team then privately sends them some GitLab swag as a thank you.

Our Code Contributors program manager will choose the MVP of the release. Before release day, the release day manager will tag advocates in the #swag Slack channel, or in the Release Day issue, as a reminder to send swag to the chosen MVP.

1. Determine MVP after merge window closes, see `#release-post` channel
1. Find MVP's contact information
  * [Contacting contributors](#contacting-contributors)
1. Generate a giveaway link from the [GitLab Release MVP Giveaway campaign in Printfection](https://app.printfection.com/account/campaign/overview.php?storeid=291968)
   * Click `+ Get New Link` button
   * Copy giveaway link in pop-over
   * Click `Mark Link as Sent` once it's sent
1. Congratulate the MVP via email using the merch@gitlab.com email alias, or via Twitter direct message (DM), and share their swag giveaway link
  * If a Twitter DM is the simplest avenue for contacting the MVP, use Tweetdeck to send the (DM) via GitLab's main twitter handle: @gitlab
1. Alert the release day manager that the giveaway has been sent

##### Suggested language for MVP Swag email, or Twitter DM:

```
Congratulations on being the MVP for GitLab's (enter release number here. ex. 13.3) release! 🤸‍♂️

https://about.gitlab.com/community/mvp/

We are so amazed by your work and we want to thank you for your contributions: please enjoy some well deserved GitLab swag! We can't wait to see what you do next!

Link to collect swag:

(paste Printfection link here, and opt to add the printfection code as well)

```

### Top Annual Contributors

In order to recognize regular contributors, the list of top contributors for each calendar year will be published in the [Top Annual Contributors page](/community/top-annual-contributors/). There will be three categories of top contributors:

*  SuperStar: more than 75 MRs merged
*  Star: between 11 and 75 MRs merged
*  Enthusiast: between 5 and 10 MRs merged

Customized GitLab merchandise will be created for these contributors and will be available on Printfection. For GitLab team members, you can follow the steps below to get the awards to the wider community members.

1. Login to Printfection using the credentials in 1Password.
1. Under `Campaigns`, go to `Giveaways` and create a new `GIVEAWAY CAMPAIGN` (you may need to [create a new `Kit`](/handbook/marketing/brand-and-product-marketing/brand/merchandise-handling/#creating-giveaway-kits) under the `Merchandise` tab if you want to include more than one item).
1. Add the item/kit to the campaign.
1. Generate Giveaway links for each contributors.
1. Include the Giveaway link in the individual email to the Top Annual Contributors.


### How to update KPIs for the Marketing Key Review

1. Find the link to the current month's deck in the [#keymonthlymarketingmetrics](https://gitlab.slack.com/archives/CM5UC5XPT) Slack channel. It is typically shared on the second Monday of the month.
1. Navigate to the slide containing the Meetups per month chart (slides 6-8 typically contain the Community Relations metrics).
1. Hover over the top right corner of the "Wider community contributions per milestone" chart above (with the blue bars) to reveal the hamburger menu, open the hamburger menu, and click `Download Image`.
1. Replace the existing `Contributions` chart in the Marketing Key Review deck with the newly downloaded image.

## Contributor lifecycle segments

In an effort to understand, support, and empower the GitLab code contributor community, we have come up with the following lifecycle segments:

| Contributor Experience level | MRs merged
| ------ | ------ | 
| New | 1-3 MRs |
| Experienced | 4-10 MRs |
| Advanced | 10+ MRs |

| Contributor Status | MRs merged | Timeframe
| ------ | ------ | ------ |
| First time contributor | First MR merged | Current month | 
| Regular Contributor | 10+ MRs | Last 6 months | 
| [Leading organizations](https://about.gitlab.com/handbook/marketing/community-relations/leading-organizations/) | 20+ MRs | last 3 completed months |
| Inactive contributors | 0 MRs | last 6 months |

Segmenting our contributor community will allow us to understand better how contributors "move" across this funnel and how we can better support them through their journey.

The goal is to increase code contributors across all segments (except the inactive ones), by identifying ways to support and reward our contributors.

## Contributor metrics

Note: this is currently a working list of all locations where we can currently gather contributor metrics. It is not *yet* the final set of metrics we will be using to monitor the success of the contributor program with.

### Bitergia dashboards
The [Bitergia dashboard](https://gitlab.biterg.io) is public and anyone can use the dashboard to view/filter/export/analyze the data. A good place to start is the [Merged Community MRs dashboard](https://gitlab.biterg.io/app/kibana#/dashboard/f88a8d00-f36b-11e8-8fe1-b354a33b38be) as it includes information that most people are looking for such as merged community MRs, number of contributors (e.g. yearly), top contributors, merged MRs per milestone, etc. You can filter the dashboard data per milestone and repository (e.g. CE vs. EE).

| Dashboard | Description |
| --- | --- |
| [Contributors](https://contributors.gitlab.com) | Metrics associated to contributors (people) and organizations |
| [Contributions](https://gitlab.biterg.io/app/kibana#/dashboard/f88a8d00-f36b-11e8-8fe1-b354a33b38be) | Metrics associated to contributions (submitted MRs). It contains our main KPI. |
| [Hackathon](https://gitlab.biterg.io/app/kibana#/dashboard/9097a7d0-55bd-11eb-a6f8-03728e7a4c82) | Metrics associated to the quarterly GitLab Hackathon. Change the time scale to zoom into a specific Hackathon |
| [Contributions and contributors over time](https://gitlab.biterg.io/app/kibana#/dashboard/1a47afc0-b950-11eb-a6f8-03728e7a4c82?_g=(refreshInterval%3A(pause%3A!t%2Cvalue%3A0)%2Ctime%3A(from%3Anow-10y%2Cmode%3Arelative%2Cto%3Anow))) | Overview of contribution and contributor growth over release, month and year time periods |

There are a number of other custom dashboards also available and to see the full list, click on `dashboard` on the upper left (next to the Bitergia logo) and then select the dashboard link from the list. To learn more about using the Bitergia dashboard, you can view recordings of Bitergia training at the [Bitergia training livestream channel](https://www.youtube.com/playlist?list=PL-gGdYiFOp7_9ij_wNLKyHgZsyhAY42rv). Specific Bitergia documentation is available on the [Bitergia FAQ](https://gitlab.com/Bitergia/c/FAQ).

Identity management is available on Bitergia's [HatStall](https://gitlab.biterg.io/identities/hatstall/profiles). Amongst other capabilities, HatStall enables merging/unmerging identities from the same person (to avoid their contributions being counted multiple times) and enrollment/offboarding identities to organizations. Use the [same login as the main Bitergia platform](#advanced-features-and-login).

#### Advanced features and login

Some administrative features for Bitergia dashboards (e.g. getting a short URL, creating a new permanent dashboard) require a login, and the login information is available in the Team Vault on 1Password.

#### Bitergia License

GitLab has a subscription with Bitergia for an annual membership renewed on the 1st of October each year. Bitergia is responsible for sending a Statement of Work (SOW) to be signed by GitLab, a month prior the expiration of the license. The Code Contributor Program Manager should include the Bitergia subscription in the program's annual budget planning.

#### Contacting Bitergia support

The Bitergia team can be reached out for support and feature requests via their regular [customer contact process](https://gitlab.com/Bitergia/c/FAQ/-/blob/master/how-to-general/README.md#contact-support)

### SiSense dashboards
Internally, GitLab uses [SiSense](https://about.gitlab.com/handbook/business-technology/data-team/platform/sisensecdt/) for tracking down the performance of various KPIs. Below you can find a list of community-related dashboards, similar to Bitergia's ones. Both tools, SiSense and Bitergia, are in sync, and we use Bitergia as the primary metrics platform for community contributions.

| Dashboard | Description |
| --- | --- |
| [Wider Community Dashboard](https://app.periscopedata.com/app/gitlab/593556/Wider-Community-Dashboard) | Metrics associated to contributors (people) and organizations |
| [Community Contributions KPI](https://app.periscopedata.com/app/gitlab/729542/Community-Contributions-KPI) | Metrics associated to [Community Relations KPIs](https://about.gitlab.com/handbook/marketing/community-relations/performance-indicators/#unique-community-contributors-per-month) (like unique contributors per month, etc) |
| [Wider Community Contribution Dashboard](https://app.periscopedata.com/app/gitlab/833190/Wider-Community-Contribution-Dashboard) | Metrics associated to community contributions, including time to triage, [MRARR](https://about.gitlab.com/handbook/engineering/performance-indicators/#mrarr) forecast for merging month, etc |


### GitLab.com
You can also directly query data from `Merge Requests` pages for projects (e.g. CE, EE, Gitter, Omnibus, Shell, etc.) on gitlab.com and apply appropriate filters for milestone, labels, etc. Some of the examples are listed in the metrics table below.

### Number of Contributors
In the past we often mentioned 2,000+ contributors in the GitLab community (GitLab team members + wider community) as you can see in [this example](/blog/2018/08/13/join-the-gitlab-community/). However, this only included contributors to CE and EE projects based on the old [https://contributors.gitlab.com](https://web.archive.org/web/20190619012814/http://contributors.gitlab.com/) page.

If you include other GitLab projects, the total number of contributors is much larger.

<iframe src="https://gitlab.biterg.io/goto/97a5b88e986f2c5d81c017c6413910a1?embed=true" height="400" width="600"></iframe>

- Total code contributors: includes GitLab team members and wider community contributors (since 2015)
- Wider community code contributors: includes wider community contributors only (since 2015)
- These figures count contributors who have opened at least one merge request, regardless of whether the merge request has been merged, closed or is still open.

- The number of wider community code contributors with a successful contributions (whose Merge Requests have been merged), can be found by applying the "merged" filter on the [Bitergia dashboard](https://gitlab.biterg.io/goto/2d7a935826f511844c52291300f3d3b2)
  - See [our top misused terms page](/handbook/communication/top-misused-terms/) for a refresher on the definition of wider community members.

When people ask about the number of contributors at GitLab, it's best to clarify if they're asking about total code contributors or wider community code contributors. In most cases, people tend to be more interested in the wider community number.

It's also important to mention that there are other ways the community contributes to GitLab other than code, as listed in our [Contribute to GitLab guide](https://about.gitlab.com/community/contribute/). Contributions like Translations, Engagement, support on our Forum, and opened issues are not included in the metrics above.

### Monitored projects

We monitor and recognize contributions across a variety of projects on the [`gitlab-org` group](https://gitlab.com/groups/gitlab-org), not only [the GitLab project](https://gitlab.com/gitlab-org/gitlab).

As a general rule, a project will be set up for monitoring wider community contributions if it uses the `gitlab-org` group milestones and the `Community contribution` label.

See the exhaustive list of [monitored `gitlab-org` group projects](https://gitlab.com/Bitergia/c/gitlab/sources/blob/master/projects.json).

Are you interested in contributing to GitLab? Check out the available [contribution opportunities here](/community/contribute/).


## Contribution Efficiency Initiative

Over the years, the code contributor program has been closely collaborating with various GitLab teams to increase contributions while streamlining the contribution process.

Community Relations team and the Quality department is currently collaborating on [Contribution Efficiency](/handbook/marketing/community-relations/code-contributor-program/collaborations), where the group's primary focus is to identify opportunities for improving the contributor experience (quicker review time, automation, etc) and internal processes.
