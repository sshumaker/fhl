The primary source for things to work on is the [<%= group %> backend issue board][issue board]
for the current iteration cycle (don't forget to filter by milestone!), which
lists all of the Deliverable and Stretch issues scheduled for this cycle in
priority order.

The lists are compiled by the Product Manager following the [product prioritization
process], with input from the team, engineering managers, and other stakeholders.
The iteration cycle lasts from the 18th of one month until the 17th of the next,
and is identified by the GitLab version set to be released on the 22nd.

There is also the [<%= group %> backend _assignment_ issue board][assignment board]
(again, don't forget to filter by milestone!), which shows the same Deliverable
and Stretch issues, now grouped by assignee, with the left-most list listing
issues not currently assigned to any backend engineer. On each list, the issues
are again ordered by priority.

#### What to work on first

Deliverables are considered top priority and are expected to be done by the end
of the iteration cycle on the 17th, in time for the release on the 22nd.

These top priority issues are assigned to engineers on or ahead of the 18th of
the month, when the iteration cycle is kicked off, and it is their responsibility
to make a best effort to get them done during that cycle, and to inform their
engineering manager if anything is standing in the way of their success.
You can find the issues assigned to you on the [<%= group %> backend assignment
issue board][assignment board] (again, don't forget to filter by milestone!).

Many things can happen during a month that can result in a deliverable
not actually being completed by the end of a cycle, and while this usually
indicates that the engineering manager was too optimistic in their estimation
of the issue's weight, or that an engineer's other responsibilities ended up
taking up more time than expected, this should never come as a surprise to the
engineering manager.

The sooner this potential outcome is anticipated and communicated, the more time
there is to see if anything can be done to prevent it, like reducing the scope
of the deliverable, or finding a different engineer who may have more time to
finish a deliverable that hasn't been started yet.
If this outcome cannot be averted and the deliverable ends up missing the
cycle, it will simply be moved to the next cycle to be finished up, and the
engineer and engineering manager will have a chance to
[retrospect](#retrospectives) and learn from what happened.

Generally, your deliverables are expected to take up about 75% of the
time you spend working in a month. The other 25% is set aside for other
responsibilities (code review, community merge request coaching, [helping
people out in Slack, participating in discussions in issues][collaboration],
etc), as well as urgent issues that come up during the month and need someone
working on them immediately (regressions, security issues, customer issues, etc).

#### What to work on next

If you have time to spare after finishing your deliverables and other
activities, you can spend the remaining time working on Stretch issues, which
can also be found on the [<%= group %> backend issue board][issue board] and [<%= group %> backend
assignment issue board][assignment board] (again, don't forget to filter by
milestone!).

These lower priority issues are _not_ expected to be done by the end of the
iteration cycle, but are to be Deliverables in the _next_ cycle, so any progress
made on them ahead of time is a bonus.

Stretch issues are usually not directly assigned to people, except in cases
where there is clearly a most appropriate person to work on them, like in the
case of technical debt, bugs related to work someone did recently, or issues
someone started on before but hasn't had a chance to finish yet.

If no Stretch issues are assigned to you yet, you can find new ones to pick up
in the left-most list of the [<%= group %> backend assignment issue board][assignment
board] (again, don't forget to filter by milestone!), which lists all issues
not currently assigned to any backend engineer. As the issues are ordered by
priority, they should be picked up starting at the top. When you assign
an issue to yourself to indicate you're working on it, it will move to your list
and out of the left-most unassigned list, and the second issue will rise to the
top for other engineers to pick up.

If anything is blocking you from getting started with the top issue immediately,
like unanswered questions or unclear requirements, you can skip it and consider
a lower priority issue, as long as you put your findings and questions in the
issue, so that the next engineer who comes around may find it in a better state.

Instead of picking up Stretch issues, you may also choose to spend any
spare time working on anything else that you believe will have a significant
positive impact on the product or the company in general.
As the [general guidelines] state, "we recognize that inspiration is
perishable, so if youâ€™re enthusiastic about something that generates great
results in relatively little time feel free to work on that."

We expect people to be [managers of one][efficiency] and prefer [responsibility
over rigidity][efficiency], so there's no need to ask for permission if you
decide to work on something that's not on the issue board, but please keep your
other responsibilities in mind, and make sure that there is an issue, you are
assigned to it, and consider sharing it in [#<%= slack_channel %>].

[product prioritization process]: /handbook/product/product-processes/#how-we-prioritize-work
[how-we-plan]: /direction/#how-we-plan-releases
[collaboration]: /handbook/values/#collaboration
[general guidelines]: /handbook/values/
[efficiency]: /handbook/values/#efficiency
[#<%= slack_channel %>]: https://gitlab.slack.com/archives/<%= slack_channel %>
