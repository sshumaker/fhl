---
layout: handbook-page-toc
title: Plan:Project Management Team
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## Plan:Project Management Team

The Plan:Project Management team works on 
GitLab's [Project Management category] in the [Plan stage].

For more details about the vision for this area of the product, see the
[Plan stage] page.

[Project Management category]: /handbook/product/categories/#project-management-group
[Plan stage]: /direction/plan/

### Team members

<%= direct_team(manager_role: 'Engineering Manager, Plan:Project Management') %>

### Stable counterparts

<%= stable_counterparts(role_regexp: /[,&] (Plan(?!:)|Plan:Project Management)/, direct_manager_role: 'Engineering Manager, Plan:Project Management') %>

### Hiring chart

Check out our [jobs page](/jobs/) for current openings.

### Team metrics dashboard

<%= partial("handbook/engineering/development/dev/plan/project_management_dashboard") %>


## Scalability Targets

<%= partial("handbook/engineering/development/dev/plan/scalability_targets") %>

## Work

You can see how we work as a stage at the [Plan stage page].

For the backend team specifically, we use the standard GitLab
[engineering workflow]. To get in touch with the Plan:Project Management
backend team, it's best to create an issue in the relevant project
(typically [GitLab CE]) and add the ~"group::project management" label, along
with any other appropriate labels. Then, feel free to ping the relevant
Product Manager and/or Engineering Manager as listed above.

For more urgent items, feel free to use [#s_plan] on Slack.

[Plan stage page]: /handbook/product/categories/#plan-stage
[engineering workflow]: /handbook/engineering/workflow/
[GitLab CE]: https://gitlab.com/gitlab-org/gitlab-ce

### Capacity planning

<%= partial("handbook/engineering/development/dev/plan/capacity_planning") %>

#### Weighing bugs

<%= partial("handbook/engineering/development/dev/plan/weighing_bugs") %>

#### Spikes

There is a decent amount of complexity in the features that we as a team are responsible for, and we're aiming to determine where the majority of risks involved in building a feature are prior to commitments being made and development starting. We are trying out a concept of a rotation of DRIs for spikes. Spikes will be a two week time period where one engineer DRI works exclusively on breaking down an issue/epic by asking questions to determine risk and complexity, creating proof of concepts, and writing up iteration plans for implementation.

The DRI will not be expected to produce MRs during the period they are on rotation, but instead, will be expected to produce issue artifacts at the end of the period, so that a first iteration can be worked on in the following milestone (either by the DRI or other engineers).

By the end of the spike, there should be documented acceptance criteria for a first iteration, that the internal parties (spike DRI, PM, UX, and EM) have all agreed to.

DRI rotation:

| DRI | Start date | End date | Spike |
| --- | --- | --- | --- |
| Alexandru Croitor | 2023-01-23 | 2023-02-03 | [Moving work items](https://gitlab.com/gitlab-org/gitlab/-/issues/387304) |
| Simon Knox | 2023-02-06 | 2023-02-17 | |
| Heinrich Lee Yu | 2023-02-20 | 2023-03-03 | |
| Coung Ngo | 2023-03-06 | 2023-03-17 | |
| Mario Celi | 2023-03-20 | 2023-03-31 | |


#### Historical Capacity

<%= partial("handbook/engineering/development/dev/plan/historical_capacity", locals: { chart_ids: [7693808] }) %>

### Collaboration between backend and frontend

#### Using the ~"backend complete" label

The ~"backend complete" label is added to issues with multiple specializations (usually backend and 
frontend) to indicate that the backend component is complete. Add this label when the backend work is 
functionally complete, merged and verified but frontend, or other, work is ongoing.

### Picking something to work on

The [Plan:Project Management Build board] always shows work in the current
release, with [workflow columns] relevant to implementation. There is an
additional column to show in-progress community contributions. Filtering it by
~backend shows issues for backend engineers to work on.

It's OK to not take the top item if you are not confident you can solve
it, but please post in [#s_plan] if that's the case, as this probably
means the issue should be better specified.

[workflow columns]: /handbook/product-development-flow/

#### High Severity Issues

<%= partial("handbook/engineering/development/dev/plan/high_severity_items") %>

### Working on unscheduled issues

Everyone at GitLab has the freedom to manage their work as they see fit,
because [we measure results, not hours][results]. Part of this is the
opportunity to work on items that aren't scheduled as part of the
regular monthly release. This is mostly a reiteration of items elsewhere
in the handbook, and it is here to make those explicit:

1. We expect people to be [managers of one][efficiency], and we [use
   GitLab ourselves][collaboration]. If you see something that you think
   is important, you can [request for it to be scheduled], or you can
   [work on a proposal yourself][iteration], as long as you keep your
   other tasks in mind.
2. From time to time, there are events that GitLab team-members can participate
   in, like the [issue bash]. Anyone is welcome
   to participate in these.
3. If you feel like you want to have some specific time set aside, but
   aren't interested in the topics of an existing event, feel free to
   label issues with "For Scheduling" and copy your manager for visibility.

When you pick something to work on, please:

1. Follow the standard workflow and assign it to yourself.
2. Share it in [#s_plan] - if not even more widely (like in #development
   or #backend).

[collaboration]: /handbook/values/#collaboration
[results]: /handbook/values/#results
[efficiency]: /handbook/values/#efficiency
[iteration]: /handbook/values/#iteration

[request for it to be scheduled]: /handbook/engineering/workflow/#requesting-something-to-be-scheduled
[issue bash]: /community/issue-bash/

### Dashboards

<%= partial "handbook/engineering/metrics/partials/_cross_functional_dashboard.erb", locals: { filter_value: "Project Management" } %>

## Useful links

* [Plan:Project Management Build board] - this shows work in the current release
* [#s_plan] in Slack
* [Recorded meetings][youtube]
* [Retrospectives][retros]
* [Group Conversations] (archive; group conversations now happen at a the
  [section level])

[Plan:Project Management Build board]: https://gitlab.com/groups/gitlab-org/-/boards/1285239?label_name[]=backend
[#s_plan]: https://gitlab.slack.com/archives/s_plan
[youtube]: https://www.youtube.com/playlist?list=PL05JrBw4t0KoceqcTneOVmAzhEp6NinY0
[retros]: https://gitlab.com/gl-retrospectives/plan/issues?scope=all&utf8=%E2%9C%93&state=all&label_name[]=retrospective
[Group Conversations]: http://gitlab-org.gitlab.io/group-conversations/plan/
[section level]: /company/team/structure/#organizational-structure
