---
layout: handbook-page-toc
title: "Scalability:Frameworks Team"
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

## Frameworks

The Frameworks team creates standard ways to use and scale the various services and technologies used by GitLab and GitLab.com, with a particular focus on enabling other development teams to support their own growth.

## What is a Framework?

Part of the scope of the Frameworks team is to define and model Technical Frameworks that exist within the GitLab ecosystem. Loosely, we use the term _Framework_ to describe the tools, processes and components required to successfully manage and run mission-critical services at GitLab.com scale.

The team focuses on 'frameworking' services and technical features that have proven to present scaling challenges. These challenges exist for a variety of reasons, typically: high-load, critical services without dedicated owners; shared architectures; complex operational configuration. The expertise within the Frameworks team helps overcome these challenges by responding to technical projections (for example, saturation forecasts), promoting uniform processes, and increasing engineering efficiency by [eliminating toil](https://sre.google/sre-book/eliminating-toil/). Existing services and components that meet these criteria includes Redis, Sidekiq, and Object Storage.
 
A Framework is a collection of attributes that describe everything necessary to build and operate a highly scalable, observable, reliable system or component, and it may include: 

- [Architectural Blueprints](https://about.gitlab.com/handbook/engineering/architecture/workflow/) used to define how the component fits into a bigger picture
- [Developer Documentation and Guidelines](https://docs.gitlab.com/) used to ensure consistency between multiple components
- Self-service deployment and management tools, used to ensure simpler maintenance of the component
- [Service Maturity Model](https://about.gitlab.com/handbook/engineering/infrastructure/service-maturity-model/), ensuring that the component has consistent interfaces necessary to operate a robust and reliable component
  - Observability and Forecasting Tools
  - Logging and Alerting Guidelines
  - [Operational Runbooks](https://gitlab.com/gitlab-com/runbooks/)

Note: The Frameworks team isn't responsible for creating and owning all of the above, but rather recognising (and resolving) the pain-points which will lead to it becoming a Framework.

## Team Members

The following people are members of the Scalability:Frameworks team:

<%= direct_team(manager_slug: 'liam-m')%>

## Team Responsibilities

---

## Measuring Success

---
